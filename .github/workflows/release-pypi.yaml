name: release-pypi

on:
  release:
    types:
      - released

jobs:
  build-wheel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: Install Python Poetry
        uses: abatilo/actions-poetry@v2.3.0
        with:
          poetry-version: 1.6.1
      - name: Configure poetry
        shell: bash
        run: python -m poetry config virtualenvs.in-project true
      - name: Show poetry version
        run: poetry --version
      - name: Build wheel
        run: poetry build --format wheel
      - uses: actions/upload-artifact@v3
        with:
          name: nectl.wheel
          path: dist/

  upload-github:
    needs: [build-wheel]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: nectl.wheel
          path: dist/
      - name: Upload package to Github
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/nectl-${{ github.event.release.tag_name }}-py3-none-any.whl
          asset_name: nectl-${{ github.event.release.tag_name }}-py3-none-any.whl
          asset_content_type: application/zip

  upload-pypi:
    needs: [build-wheel]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: nectl.wheel
          path: dist/
      - name: Publish to test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
